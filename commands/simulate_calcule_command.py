import typer
from scripts import simulate_calcule

app = typer.Typer()

@app.command(           
    help=(
        "üíπ Simule une strat√©gie de DCA (Dollar Cost Averaging).\n\n"
        "Cette commande calcule le nombre d'it√©rations possibles entre un prix d'entr√©e "
        "et un prix catastrophique en appliquant un pourcentage de baisse √† chaque √©tape. "
        "Elle r√©partit √©galement le capital allou√© (balance) sur ces it√©rations et peut "
        "exporter les r√©sultats au format JSON.\n\n"
        "üíæ Exemple :\n"
        "python cli.py simulate run --balance 1000 --prix-entree 40 --prix-catastrophique 4 --drop-percent 50 --export-file resultat.json"
    )
)
def run(
    balance: float = typer.Option(..., help="Le montant total disponible"),
    prix_entree: float = typer.Option(..., help="Le prix d'entr√©e initial"),
    prix_catastrophique: float = typer.Option(..., help="Le prix plancher ou d'arr√™t"),
    drop_percent: float = typer.Option(..., help="Le pourcentage de baisse √† chaque it√©ration"),
    export_file: str = typer.Option(None, help="Chemin du fichier JSON √† exporter (optionnel)")
):
    """
    Ex√©cute un calcul de DCA et affiche ou exporte les r√©sultats.
    """
    try:
        simulate_calcule.executer_calcul(balance, prix_entree, prix_catastrophique, drop_percent, export_file)
    except ValueError:
        typer.echo("‚ùå Erreur: valeurs num√©riques invalides.")
    except ZeroDivisionError:
        typer.echo("‚ùå Erreur: division par z√©ro, le prix catastrophique ne peut pas √™tre atteint.")
